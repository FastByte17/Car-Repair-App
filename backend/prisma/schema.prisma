// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  EMPLOYEE
  MANAGER
  ADMIN
}

model Report {
  id        Int   @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  checkedIn DateTime @default(now())
  checkedOut DateTime? 
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  firstName     String
  lastName      String   @unique
  password      String
  device        String   @unique @default(uuid())
  pin           String
  isCheckedIn   Boolean  @default(false)  
  phoneNumber   String   @unique
  role          Role     @default(EMPLOYEE)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  MyTasks       Task[]   @relation("assigned")
  AssignedTasks Task[]   @relation("assignee")
  report        Report[]
}

model History {
  id        Int   @id @default(autoincrement())
  taskId    String
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  status    String
  assignedWorker    String
  changedAt DateTime @default(now())
}

model Task {
  id         String   @id @default(uuid())
  vehReg     String   @db.VarChar(50)
  note       String
  isHidden   Boolean  @default(false)
  images     String[] @default([])
  column     Column   @relation(fields: [columnId], references: [id], onDelete: Cascade)
  assigned   User     @relation("assigned", fields: [assignedId], references: [id], onDelete: Cascade)
  assignee   User     @relation("assignee", fields: [assigneeId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  assignedId String
  assigneeId String
  columnId   String
  position   Int      @default(autoincrement())
  history    History[]
}

model Column {
  id        String   @id @default(uuid())
  title     String   @db.VarChar(50) @unique
  tasks     Task[]
  position  Int      @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
